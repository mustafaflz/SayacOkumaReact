[{"C:\\Users\\Machine\\react-demo\\react-login-aws\\react_login_form-main\\src\\index.js":"1","C:\\Users\\Machine\\react-demo\\react-login-aws\\react_login_form-main\\src\\App.js":"2","C:\\Users\\Machine\\react-demo\\react-login-aws\\react_login_form-main\\src\\context\\AuthProvider.js":"3","C:\\Users\\Machine\\react-demo\\react-login-aws\\react_login_form-main\\src\\Register.js":"4","C:\\Users\\Machine\\react-demo\\react-login-aws\\react_login_form-main\\src\\Login.js":"5","C:\\Users\\Machine\\react-demo\\react-login-aws\\react_login_form-main\\src\\api\\axios.js":"6"},{"size":314,"mtime":1641370430000,"results":"7","hashOfConfig":"8"},{"size":176,"mtime":1641370430000,"results":"9","hashOfConfig":"8"},{"size":342,"mtime":1641370430000,"results":"10","hashOfConfig":"8"},{"size":7732,"mtime":1641370430000,"results":"11","hashOfConfig":"8"},{"size":3971,"mtime":1673456322405,"results":"12","hashOfConfig":"8"},{"size":98,"mtime":1641370430000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2uhp4j",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Machine\\react-demo\\react-login-aws\\react_login_form-main\\src\\index.js",[],"C:\\Users\\Machine\\react-demo\\react-login-aws\\react_login_form-main\\src\\App.js",["27"],"C:\\Users\\Machine\\react-demo\\react-login-aws\\react_login_form-main\\src\\context\\AuthProvider.js",[],"C:\\Users\\Machine\\react-demo\\react-login-aws\\react_login_form-main\\src\\Register.js",["28","29"],"C:\\Users\\Machine\\react-demo\\react-login-aws\\react_login_form-main\\src\\Login.js",["30","31","32"],"import { useRef, useState, useEffect, useContext } from 'react';\nimport AuthContext from \"./context/AuthProvider\";\n\nimport axios from './api/axios';\nconst LOGIN_URL = 'https://2cogphqi4rk2fmsb4e6c3yh42m0bkkbx.lambda-url.eu-central-1.on.aws';\n\nconst Login = () => {\n    const { setAuth } = useContext(AuthContext);\n    const userRef = useRef();\n    const errRef = useRef();\n\n    const [user, setUser] = useState('');\n    const [pwd, setPwd] = useState('');\n    const [errMsg, setErrMsg] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    useEffect(() => {\n        userRef.current.focus();\n    }, [])\n\n    useEffect(() => {\n        setErrMsg('');\n    }, [user, pwd])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const headers = {\n            withCredentials: true,\n            headers:{\n\n                'username': 'mustafa.filiz',\n                'password': '123456'\n            }\n        };\n        try {\n            const response = await axios.post(LOGIN_URL,{\n\n                'username':user,\n                'password':pwd\n            },\n            {\n                headers: { \n                    'Content-Type': 'application/json'\n            },\n            \n                withCredentials: true\n            }\n                \n            );\n            console.log(JSON.stringify(response?.data));\n            console.log(JSON.stringify(response));\n            console.log(JSON.stringify({headers: { 'username':user, 'password':pwd} }));\n            const accessToken = response?.data?.accessToken;\n            const roles = response?.data?.roles;\n            setAuth({ user, pwd, roles, accessToken });\n            setUser('');\n            setPwd('');\n            setSuccess(true);\n        } catch (err) {\n            if (!err?.response) {\n                setErrMsg('No Server Response');\n            } else if (err.response?.status === 400) {\n                setErrMsg('Missing Username or Password');\n            } else if (err.response?.status === 401) {\n                setErrMsg('Unauthorized');\n            } else {\n                setErrMsg('Login Failed');\n            }\n            errRef.current.focus();\n        }\n    }\n\n    return (\n        <>\n            {success ? (\n                <section>\n                    <h1>You are logged in!</h1>\n                    <br />\n                    <p>\n                        <a href=\"#\">Go to Home</a>\n                    </p>\n                </section>\n            ) : (\n                <section>\n                    <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n                    <h1>Sign In</h1>\n                    <form onSubmit={handleSubmit}>\n                        <label htmlFor=\"username\">Username:</label>\n                        <input\n                            type=\"text\"\n                            id=\"username\"\n                            ref={userRef}\n                            autoComplete=\"off\"\n                            onChange={(e) => setUser(e.target.value)}\n                            value={user}\n                            required\n                        />\n\n                        <label htmlFor=\"password\">Password:</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            onChange={(e) => setPwd(e.target.value)}\n                            value={pwd}\n                            required\n                        />\n                        <button>Sign In</button>\n                    </form>\n                    <p>\n                        Need an Account?<br />\n                        <span className=\"line\">\n                            {/*put router link here*/}\n                            <a href=\"#\">Sign Up</a>\n                        </span>\n                    </p>\n                </section>\n            )}\n        </>\n    )\n}\n\nexport default Login\n","C:\\Users\\Machine\\react-demo\\react-login-aws\\react_login_form-main\\src\\api\\axios.js",[],{"ruleId":"33","severity":1,"message":"34","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":16},{"ruleId":"37","severity":1,"message":"38","line":89,"column":25,"nodeType":"39","endLine":89,"endColumn":37},{"ruleId":"37","severity":1,"message":"38","line":174,"column":29,"nodeType":"39","endLine":174,"endColumn":41},{"ruleId":"33","severity":1,"message":"40","line":27,"column":15,"nodeType":"35","messageId":"36","endLine":27,"endColumn":22},{"ruleId":"37","severity":1,"message":"38","line":80,"column":25,"nodeType":"39","endLine":80,"endColumn":37},{"ruleId":"37","severity":1,"message":"38","line":113,"column":29,"nodeType":"39","endLine":113,"endColumn":41},"no-unused-vars","'Register' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'headers' is assigned a value but never used."]